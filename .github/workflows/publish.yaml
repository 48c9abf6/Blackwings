name: Publish

on:
  workflow_call:
    inputs:
      tag:
        type: string
      prerelease:
        required: true
        default: false
        type: boolean
      draft:
        required: true
        default: true
        type: boolean

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Install Minver
      run: dotnet tool install --global minver-cli --version 4.3.0

    - name: Calculating version
      id: version
      run: echo "version=$(minver -m 1.0 -p preview -v e)" >> $GITHUB_OUTPUT

  publish_artifacts:
    needs: versioning
    strategy:
      matrix:
        configuration: [Release, Debug]

    name: Publish artifacts (${{ matrix.runtime }})
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Setup vcpkg 
      run: |
        bootstrap-vcpkg
        vcpkg integrate install
  
    - name: Build
      run: msbuild /p:Configuration=${{ matrix.configuration }} /p:Platform=x86

    - name: Compress artifacts
      run: Compress-Archive -Path ${{ matrix.configuration }}/* -Destination Blackwings-${{ matrix.configuration }}-${{ needs.versioning.outputs.version }}.zip

    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Blackwings-${{ matrix.configuration }}-${{ needs.versioning.outputs.version }}
        path: Blackwings-${{ matrix.configuration }}-${{ needs.versioning.outputs.version }}.zip


  publish_release:
    needs: [versioning, publish_artifacts]

    name: Publish to Github releases
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3

    - uses: "marvinpinto/action-automatic-releases@v1.2.1"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "${{ inputs.tag }}"
        prerelease: ${{ inputs.prerelease }}
        draft: ${{ inputs.draft }}
        title: "${{ needs.versioning.outputs.version }}"
        files: "*/*.zip"